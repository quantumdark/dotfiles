# Hierarchy:
#  Server
#  ㄴSession
#    ㄴWindow
#      ㄴPane

# Options:
# - Session options (set-option [-g])
# - Window options (set-window-option [-g])

# -------------------------------------------------------------------
# Session options
# -------------------------------------------------------------------
# Change bind key to ctrl-a
unbind-key c-b
set-option -g prefix c-a

# Index starts from 1
set-option -g base-index 1

# Renumber windows when a window is closed
set-option -g renumber-windows on

# History
set-option -g history-limit 102400

# Repeat time limit (ms)
set-option -g repeat-time 500

# No delay for escape key press
set -sg escape-time 0

# 256-color terminal
set-option -g default-terminal "screen-256color"

# Key binding in the status line (bind-key :)
set-option -g status-keys emacs

# -------------------------------------------------------------------
# Window options
# -------------------------------------------------------------------
# UTF-8
set-window-option -g utf8 on

# Copy-mode
set-window-option -g mode-mouse on
set-window-option -g mode-keys vi

# Mouse
set-option -g mouse-resize-pane on
set-option -g mouse-select-pane on
set-option -g mouse-select-window on

# -------------------------------------------------------------------
# Key bindings
# -------------------------------------------------------------------
# prefix c
bind-key c new-window -c "#{pane_current_path}"

# prefix ctrl-a
bind-key c-a last-window

# prefix a
bind-key a send-prefix

# prefix |
bind-key | split-window -h -c "#{pane_current_path}"

# prefix -
bind-key - split-window -c "#{pane_current_path}"

# Moving windows
bind-key -r > swap-window -t :+
bind-key -r < swap-window -t :-

# Back and forth
bind-key bspace previous-window
bind-key space next-window
bind-key / next-layout # Overridden

# Pane-movement
bind-key h select-pane -L
bind-key l select-pane -R
bind-key j select-pane -D
bind-key k select-pane -U
bind-key tab select-pane -t :.+
bind-key btab select-pane -t :.-

# Synchronize panes
bind-key * set-window-option synchronize-pane

# Reload ~/.tmux.conf
bind-key R source-file ~/.tmux.conf \; display-message "Reloaded!"

# copy-mode
bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-pipe "pbcopy"

# Capture pane and open in Vim
bind-key C-c run 'tmux capture-pane -S -102400 -p > /tmp/tmux-capture.txt'\;\
             new-window "view /tmp/tmux-capture.txt"
bind-key M-c run "screencapture -l$(osascript -e 'tell app \"iTerm\" to id of window 1') -x -o -P /tmp/$(date +%Y%m%d-%H%M%S).png"

# Notes
bind-key C-n if-shell "tmux select-window -t NOTES" "" \
  "new-window -n NOTES 'bash -i ~/gdrive/sync/notes/list'"

# -------------------------------------------------------------------
# fzf integration
# -------------------------------------------------------------------
# Tmux completion
bind-key -n 'M-t' run "tmux split-window -p 40 'tmux send-keys -t #{pane_id} \"$(tmuxwords.rb --all --scroll 1000 --min 5 | fzf --multi | paste -sd\\  -)\"'"

# fzf-locate (all)
bind-key -n 'M-`' run "tmux split-window -p 40 'tmux send-keys -t #{pane_id} \"$(locate / | fzf -m | paste -sd\\  -)\"'"

# select-pane (@george-b)
bind-key 0 run "tmux split-window -l 12 'bash -ci ftpane'"

# -------------------------------------------------------------------
# Here be dragons!
# -------------------------------------------------------------------
# Backslash bind-key
if-shell "test $USER = jg" \
  "unbind C-a; set-option -g prefix \\ ; bind-key ] send-prefix; bind-key p paste-buffer; bind-key \\ last-window"

# Bind-key switch
bind-key F9  set-option -g prefix C-a   \;\
             bind-key a send-prefix     \;\
             bind-key p previous-window \;\
             bind-key C-a last-window
bind-key F10 set-option -g prefix "\\"  \;\
             bind-key ] send-prefix     \;\
             bind-key p paste-buffer    \;\
             bind-key "\\" last-window

# This tmux statusbar config was created by tmuxline.vim
set -g status-bg "colour238"
set -g message-command-fg "colour188"
set -g status-justify "left"
set -g status-left-length "100"
set -g status "on"
set -g pane-active-border-fg "colour249"
set -g message-bg "colour237"
set -g status-right-length "100"
set -g status-right-attr "none"
set -g message-fg "colour188"
set -g message-command-bg "colour237"
set -g status-attr "none"
set -g status-utf8 "on"
set -g pane-border-fg "colour237"
set -g status-left-attr "none"
setw -g window-status-fg "colour188"
setw -g window-status-attr "none"
setw -g window-status-activity-bg "colour238"
setw -g window-status-activity-attr "none"
setw -g window-status-activity-fg "colour249"
setw -g window-status-separator ""
setw -g window-status-bg "colour238"
set -g status-left "#[fg=colour236,bg=colour249] #S #[fg=colour249,bg=colour238,nobold,nounderscore,noitalics]"
set -g status-right "#[fg=colour237,bg=colour238,nobold,nounderscore,noitalics]#[fg=colour188,bg=colour237] %Y-%m-%d  %H:%M #[fg=colour249,bg=colour237,nobold,nounderscore,noitalics]#[fg=colour236,bg=colour249] #h "
setw -g window-status-format "#[fg=colour188,bg=colour238] #I #[fg=colour188,bg=colour238] #W "
setw -g window-status-current-format "#[fg=colour238,bg=colour237,nobold,nounderscore,noitalics]#[fg=colour188,bg=colour237] #I #[fg=colour188,bg=colour237] #W #[fg=colour237,bg=colour238,nobold,nounderscore,noitalics]"
